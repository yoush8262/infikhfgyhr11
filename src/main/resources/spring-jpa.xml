<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                        http://www.springframework.org/schema/tx
    					http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
 						http://www.springframework.org/schema/aop 
 						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd


                        http://www.springframework.org/schema/data/jpa 
       					http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd">

    <!-- 自动扫描 -->
    <context:component-scan base-package="com.shanyepifu.ssjoj.*.service"></context:component-scan>
    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:database-jdbc.properties"/>
    </bean>

    <!-- 数据源配置 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 驱动名称 -->
        <property name="DriverClassName" value="${driver}"/>
        <!-- JDBC连接串 -->
        <property name="url" value="${url}"/>
        <!-- 数据库用户名称 -->
        <property name="username" value="${username}"/>
        <!-- 数据库密码 -->
        <property name="password" value="${password}"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="${maxActive}"/>
        <!-- 初始化大小 -->
        <property name="initialSize" value="${initialSize}"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"/>
        <!-- 逐出连接的检测时间间隔 -->
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
        <!-- 最小逐出时间 -->
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>
        <!-- 测试有效用的SQL Query -->
        <property name="validationQuery" value="${validationQuery}"/>
        <!-- 连接空闲时测试是否有效 -->
        <property name="testWhileIdle" value="${testWhileIdle}"/>
        <!-- 获取连接时测试是否有效 -->
        <property name="testOnBorrow" value="${testOnBorrow}"/>
        <!-- 归还连接时是否测试有效 -->
        <property name="testOnReturn" value="${testOnReturn}"/>
    </bean>


    <!-- JPA实体工厂配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描实体路径 -->
        <property name="packagesToScan" value="com.shanyepifu.ssjoj.*.entity"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"/>
                <property name="generateDdl" value="false"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hiberante.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!--设置外连接抓取树的最大深度 -->
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.jdbc.fetch_size">18</prop>
                <prop key="hibernate.jdbc.batch_size">10</prop>
                <!-- 自动建表类型 validate|create|create-drop|update -->
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
                <!-- 是否显示SQL -->
                <prop key="hibernate.show_sql">false</prop>
                <!-- 显示SQL是否格式化 -->
                <prop key="hibernate.format_sql">false</prop>
                <!-- 关闭二级缓存 -->
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
                <!-- 关闭实体字段映射校验 -->
                <prop key="javax.persistence.validation.mode">none</prop>
            </props>
        </property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 配置事务传播特性 -->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置参与事务的类 -->
    <aop:config>
        <aop:pointcut id="dao-tx" expression="execution(* *..dao.impl..*(..))"/>
        <aop:pointcut id="service-tx" expression="execution(* *..service.impl..*(..))"/>
        <aop:advisor pointcut-ref="dao-tx" advice-ref="txAdvice"/>
        <aop:advisor pointcut-ref="service-tx" advice-ref="txAdvice"/>
    </aop:config>

    <!-- 事务注解 -->
    <tx:annotation-driven/>

    <!-- Spring Data Jpa配置 -->
    <jpa:repositories base-package="com.shanyepifu.ssjoj.*.dao" transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="entityManagerFactory"/>
</beans>